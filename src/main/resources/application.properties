#tomcat server \uC124\uC815
server.port=8081

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@192.168.20.25:1521:xe
spring.datasource.username=scott
spring.datasource.password=tiger

# JPA/Hibernate에서 DDL(create, drop, alter) 문장을 자동으로 작성.
# 스프링 부트 어플리케이션이 실행 될 때 drop, table을 실행하고 create table을 실행.
# -> 실제(현업) 동작중인 어플리케이션에서는 절대로 사용하면 안됨. 테스트 용도로만 사용.
# ddl-auto=none (기본값)으로 설정하면 create table을 실행하지 않음
spring.jpa.hibernate.ddl-auto=none

#JPA/Hibernate에서 자동으로 생성되는 SQL 문장을 보기좋게 포맷팅해서 로그로 출력
spring.jpa.properties.hibernate.format_sql=true
#JPA/Hibernate에서 자동으로 생성되는 SQL 문장을 색상을 입혀서 출력. / 어두운테마에서는 별로라고 하는데 한 번 써보고 판단하자
# spring.jpa.properties.hibernate.highlight_sql=true

# Hibernate의 로그 레벨을 설정.
logging.level.org.hibernate.SQL=debug
    
# PreparedState의 바인딩 파라미터 값을 로그로 출력하기 위해서
logging.level.org.hibernate.orm.jdbc.bind=trace

spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=false
spring.devtools.remote.restart.enabled=true
spring.freemarker.cache=false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.web.resources.static-locations=classpath:/static/

logging.level.root=INFO
logging.level.org.springframework.web=DEBUG

# twitch api
spring.security.oauth2.client.registration.twitch.client-id=cycgcdsm686coksyhuc8j1i2ee8fny
spring.security.oauth2.client.registration.twitch.client-secret=u38dflbiyukx8nih3vsny3waz8wvl3
spring.security.oauth2.client.registration.twitch.client-authentication-method=POST
spring.security.oauth2.client.registration.twitch.scope=user:read:email
spring.security.oauth2.client.registration.twitch.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.twitch.provider=twitch
spring.security.oauth2.client.registration.twitch.client-name=Twitch
spring.security.oauth2.client.registration.twitch.redirect-uri=https://api.igdb.com/v4

spring.security.oauth2.client.provider.twitch.authorization-uri=https://id.twitch.tv/oauth2/authorize?response_type=code
spring.security.oauth2.client.provider.twitch.token-uri=https://id.twitch.tv/oauth2/token
spring.security.oauth2.client.provider.twitch.user-info-uri=https://id.twitch.tv/oauth2/userinfo
spring.security.oauth2.client.provider.twitch.user-info-authentication-method=POST
spring.security.oauth2.client.provider.twitch.jwk-set-uri=https://id.twitch.tv/oauth2/keys
spring.security.oauth2.client.provider.twitch.user-name-attribute=sub

# pay
imp.code=imp61151663
imp.api.key=4728510025776001
imp.api.secretkey=LNz3eah1RjlfPVZrGhGmOZj20CmAzhZwUyDcjI5J5V2HMVC6Xmy7RgpbHB39aWzFjSZyNwAjDcBi7QiU
