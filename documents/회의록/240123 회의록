프로젝트 전체 일정 논의
오늘 + 내일 일정 논의
주제 논의
프로젝트 규칙 선정
프로젝트 관련 기타 논의사항

일정 >>
1월 23일 - 26일(늦어도 1월 말까지) : 기획 + DB
2월 1일 - 2월 25일 : 개발 진행.(+AWS 교체)
2월 26일 - 2월 말 : 리팩토링
3월 1일 - 3월 11일 : 리팩토링 + 발표준비

주제 선정 - 기획DB - 개발(프+백)- 리팩토링 -발표준비
-----------------
오늘 할 것 >>
1.아프리카TV + 트위치 + 치지직
사이트 훑으면서 대략적으로 어떤 기능 필요할지 메모.

2.스트리밍 + 방송 관련 라이브러리 최소 1개 이상 찾기
(스트리밍방송 구현할 수 있는지 가늠하기 위해서임)

3.주제(오늘 나온 것 제외) 1가지 이상 생각해서 메모.
(내일 오전에 공유)

4. 이번 프로젝트하면서 시행해볼 것 생각해보기
(~했으면 좋겠다)
---
<<주제>>

치지직 >> 스트리밍 플랫폼 사이트 제작
영상 관련이어서 눈에 띔.
큰 데이터의 영상 위주여서 리팩토링 효과 두드러짐.
**재밌을 것 같음.
*난이도 높을 수 있음.

포털 사이트 >> 네이버 or 다음
다양하게 할 수 있음.
자유도가 높아서 분량과 난이도 조절 가능.

---
zoom >> 미팅 영상 프로그램 플랫폼
치지직과 비슷한 이유.
*영상 관련이어서 난이도 높을 수 있음.
----
롤 관련 웹사이트 >> 관련 정보 제공
롤 도움 되는 관련 정보 제공 사이트
----
로아 초파고 >>
로아 관련 정보 제공
---
** AWS 언제 바꿀지? >>
선생님 문의 결과: 로컬db로 거의 구현한 후 AWS로 교체하든, 중간에 교체하든 DB 스키마만 교체하면 되기 때문에 큰 문제는 없을 것이라고 함. 
(일단 작업 진행하면서 생각해보기)
---
내일 일정 >>
오전(늦어도 오후 3시까지)
각자 조사한 것 공유 + 주제 선정

오후
필요 기능 선정 및 DB 구조 설계
---
<<프로젝트 규칙>>
--------------
<커뮤니케이션>
카톡에 일과 시작-종료 시, (오늘 할 것 - 오늘 한 것 - 앞으로 할 것) 공유
일과 시작 시, 카톡에 오늘 할 것 업로드
오후 5시 20분(끝나기 1시간 전), 카톡에 오늘 한 것 + 내일 할 것 업로드 
--------------
<git 관련>
git 올리려고 할 때, 카톡에 공고
(ex: 누구누구 깃 올릴게요~) 
git 올린 후, 카톡에 git 내용 공유
---------------
<코드 중복-충돌>
해당 팀원에게 문의한 후에 중복-충돌 코드 수정하기.
------------
<코드 정리-리팩토링>
*코드 정리한 후에 github 업로드(최소한 gpt에게 코드 정리 관련 문의해서 해결한 후에 업로드하기)
*주석, 로그 꼼꼼히 짜기.
*fix된 기능은 관여된 팀원과 상의 하에 리팩토링 진행.
(여유 있을 때 리팩토링. 기능 구현 선순위) 

---
<기타>
기획 완료 후 바로 초반 디자인 잡기(레이아웃 등)

처음에 DB 어느 정도 작업한 후, 작업하면서 DB 보완하기.

db 초반에 어느 정도 구성하고 하면서 고치기.

**프론트-백엔드
프론트-백엔드 비중 따라 분배. 초반에 프론트로 레이아웃 짤 팀원 필요.

SCSS 도입(보류. 추후 도입할지 생각)
